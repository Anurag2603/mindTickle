<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="get-customer-test-suite.xml" />
	<munit:test name="get-customer-test-suite-get-customerTest" doc:id="f1bf92a9-7150-4c33-a05e-f61175a1594f" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock GET Customer" doc:id="49b75d10-187a-46df-8f2f-b4b3a4f4e2ca" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="7b9c44af-7c20-46e3-8412-3ab51517b030" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://getcustomertest/mock_payload.dwl')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Input" doc:id="cd30c0f6-6ef0-4c83-bf8d-5dc75624a25d" >
				<munit:attributes value="#[readUrl('classpath://getcustomertest/set_event_attributes.dwl')]" mediaType="application/json" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to get-customer" doc:id="4a1787c3-af17-412b-baf0-20f093213846" name="get:\customer\(email):as-micorp-sapi-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert Payload" doc:id="bee8041a-475f-4916-a330-f52a0a5fb4c3" >
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getcustomertest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
