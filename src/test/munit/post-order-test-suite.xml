<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="post-order-test-suite.xml" />
	<munit:test name="post-order-test-suite-post-orderTest" doc:id="af13bfa3-8d64-4602-b8fd-659942baf561" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock POST Order" doc:id="e1592048-3eb3-4d17-9544-600339219577" processor="salesforce:create">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b60241f7-7fd4-4082-843a-a4469f92bb23" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json  --- readUrl('classpath://postordertest/mock_payload.dwl')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Input" doc:id="c79977cb-d333-4461-a939-acaca8d9206c" >
				<munit:payload value="#[output application/json  --- readUrl('classpath://postcustomertest/set_event_payload.dwl')]" mediaType="application/json" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to post-order" doc:id="e9c44677-a73c-4b45-bb06-96df06361a8b" name="post:\order:application\json:as-micorp-sapi-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert Payload" doc:id="7e629e8f-fd18-43f6-9fa2-c7736daf47bc" >
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postordertest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
